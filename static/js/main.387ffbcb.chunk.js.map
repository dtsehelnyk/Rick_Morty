{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Header/Header.jsx","api/api.js","components/Characters/CharactersFilter/CharactersFilter.jsx","components/Character/Character.jsx","components/ModalCharacter/ModalCharacter.jsx","components/Pagination/Pagination.jsx","components/ListNav/ListNav.jsx","components/Characters/Characters.jsx","components/Episodes/EpisodesFilter/EpisodesFilter.jsx","components/Episodes/Episodes.jsx","components/Locations/LocationsFilter/LocationsFilter.jsx","components/Locations/Locations.jsx","components/WatchList/WatchItem/WatchItem.jsx","components/WatchList/WatchList.jsx","components/Main/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","activeClassName","to","Header","getData","route","a","fetch","mode","request","json","CharactersFilter","handleFilter","useState","status","species","gender","filter","setFilter","value","name","onChange","event","target","Character","props","id","image","showMore","onClick","classNames","src","alt","ModalCharacter","location","origin","modalReset","type","Pagination","currentPage","setCurrentPage","pagesAmount","disabled","ListNav","preventDefault","Characters","charactersFromServer","setCharacters","cardsAmount","setCardsAmount","setPagesAmount","currentModal","setModal","filterParams","useEffect","newCharacters","error","results","console","log","info","count","pages","characterInfo","map","character","EpisodesFilter","handleSearch","query","setQuery","autoComplete","placeholder","Episodes","episodesFromServer","setEpisodes","episodesAmount","setEpisodesAmount","newEpisodes","titleRequest","episode","air_date","LocationsFilter","dimension","Locations","locationsFromServer","setLocations","locationsAmount","setLocationsAmount","newLocations","WatchItem","movie","index","toggleMovie","removeMovie","checked","completed","title","WatchList","movies","setMovies","newMovieTitle","setMovieTitle","localStorage","getItem","JSON","parse","setItem","stringify","action","onSubmit","trim","Date","now","Main","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.387ffbcb.chunk.js","sourcesContent":["import React from 'react';\nimport './Navbar.scss';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from 'react-router-dom';\n\nexport const Navbar = () => {\n\n  return (\n    <nav className=\"Navbar\">\n      <ul className=\"Navbar__list\">\n        <li>\n          <NavLink\n            className=\"Navbar__link\"\n            activeClassName=\"Navbar__link--active\"\n            to=\"/characters\"\n          >\n            Characters\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            className=\"Navbar__link\"\n            activeClassName=\"Navbar__link--active\"\n            to=\"/episodes\"\n          >\n            Episodes\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            className=\"Navbar__link\"\n            activeClassName=\"Navbar__link--active\"\n            to=\"/locations\"\n          >\n            Locations\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            className=\"Navbar__link\"\n            activeClassName=\"Navbar__link--active\"\n            to=\"/my_list\"\n          >\n            My watch list\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  )\n}","import React from 'react';\nimport './Header.scss';\n\nimport { Navbar } from '../Navbar/Navbar';\n\nexport const Header = () => {\n\n  return (\n    <header className=\"Header\">\n      <Navbar />\n    </header>\n  )\n}\n","export const BASE_URL = `https://rickandmortyapi.com/api/`;\n\nexport const getData = async (route) => {\n  const request = await fetch(\n    `${BASE_URL}${route}`,\n    {mode: 'cors'}\n  );\n\n  return await request.json();\n}\n\n","import React, { useState } from 'react';\nimport './CharactersFilter.scss';\n\nexport const CharactersFilter = ({ handleFilter }) => {\n  const [ filter, setFilter ] = useState({ \n    status: '',\n    species: '',\n    gender: '',\n   })\n\n  return (\n    <form className=\"CharactersFilter\">\n      <select\n        className=\"CharactersFilter__select\"\n        value={filter.status}\n        name=\"status\"\n        onChange={(event) => {\n          setFilter({ ...filter, status: event.target.value });\n          handleFilter({ ...filter, status: event.target.value });\n        }}\n      >\n        <option value=\"\">All</option>\n        <option value=\"Dead\">Dead</option>\n        <option value=\"Alive\">Alive</option>\n        <option value=\"unknown\">Unknown</option>\n      </select>\n\n      <select\n        className=\"CharactersFilter__select\"\n        value={filter.gender}\n        name=\"gender\"\n        onChange={(event) => {\n          setFilter({ ...filter, gender: event.target.value });\n          handleFilter({ ...filter, gender: event.target.value });\n        }}\n      >\n        <option value=\"\">All</option>\n        <option value=\"Male\">Male</option>\n        <option value=\"Female\">Female</option>\n        <option value=\"Genderless\">Genderless</option>\n        <option value=\"unknown\">Unknown</option>\n      </select>\n\n      <select\n        className=\"CharactersFilter__select\"\n        value={filter.species}\n        name=\"species\"\n        onChange={(event) => {\n          setFilter({ ...filter, species: event.target.value });\n          handleFilter({ ...filter, species: event.target.value });\n        }}\n      >\n        <option value=\"\">All</option>\n        <option value=\"Human\">Human</option>\n        <option value=\"Alien\">Alien</option>\n        <option value=\"Animal\">Animal</option>\n        <option value=\"Disease\">Disease</option>\n        <option value=\"Cronenberg\">Cronenberg</option>\n        <option value=\"Robot\">Robot</option>\n        <option value=\"Humanoid\">Humanoid</option>\n        <option value=\"Poopybutthole\">Poopybutthole</option>\n        <option value=\"unknown\">Unknown</option>\n      </select>\n    </form>\n  )\n}","import React, { useState } from 'react';\nimport './Character.scss';\nimport classNames from 'classnames';\n\nexport const Character = (props) => {\n  const { id, name, status, species, gender, image, showMore } = props;\n\n  return (\n    <div\n      onClick={() => showMore(props)}\n      className={classNames(\"Character\", {\n        \"Character--alive\": status === \"Alive\",\n        \"Character--dead\": status === \"Dead\",\n        \"Character--unknown\": status === \"unknown\",\n      })}\n    >\n      <div className=\"Character__picture\">\n        <img\n          className=\"Character__image\"\n          src={image}\n          alt={name}\n        />\n      </div>\n\n      <div className=\"Character__info\">\n        <span className=\"Character__index\">\n          {id}\n        </span>\n\n        <p className=\"Character__name\">\n          Name: {name}\n        </p>\n\n        <p className=\"Character__speacies\">\n          Species: {species}\n        </p>\n\n        <p className=\"Character__gender\">\n          Gender: {gender}\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport './ModalCharacter.scss';\n\nexport const ModalCharacter = ({\n  image,\n  name,\n  species,\n  gender,\n  status,\n  location,\n  origin,\n  modalReset\n}) => {\n\n  return (\n    <div className=\"ModalCharacter\">\n      <button\n        className=\"ModalCharacter__close\"\n        type=\"button\"\n        onClick={modalReset}\n      >\n        x\n      </button>\n      <div className=\"ModalCharacter__picture\">\n        <img\n          className=\"ModalCharacter__image\"\n          src={image}\n          alt={name}\n        />\n      </div>\n      <ul className=\"ModalCharacter__list\">\n        <li>\n          <b>Name: </b>\n          {name}\n        </li>\n        <li>\n          <b>Species: </b>\n          {species}\n        </li>\n        <li>\n          <b>Gender: </b>\n          {gender}\n        </li>\n        <li>\n          <b>Status: </b>\n          {status}\n        </li>\n        <li>\n          <b>Origin: </b>\n          {origin.name}\n        </li>\n        <li>\n          <b>Location: </b>\n          {location.name}\n        </li>\n      </ul>\n    </div>\n  )\n}","import React from 'react';\nimport './Pagination.scss';\n\nexport const Pagination = ({ currentPage, setCurrentPage, pagesAmount }) => {\n\n  return (\n    <div className=\"Pagination\">\n      {currentPage > 1 &&\n        <button\n          type=\"button\"\n          className=\"Pagination__page-button\"\n          onClick={() => {\n            setCurrentPage(1);\n          }}\n        >\n          1\n        </button>\n      }\n\n      {currentPage > 3 && \"...\"}\n\n      {currentPage > 2 &&\n        <button\n          type=\"button\"\n          className=\"Pagination__page-button\"\n          onClick={() => {\n            setCurrentPage(currentPage - 1);\n          }}\n        >\n          {currentPage - 1}\n        </button>\n      }\n\n      <button\n        disabled\n        type=\"button\"\n        className=\"Pagination__page-button Pagination__page-button--active\"\n      >\n        {currentPage}\n      </button>\n\n      {(currentPage < pagesAmount - 1) &&\n        <button\n          type=\"button\"\n          className=\"Pagination__page-button\"\n          onClick={() => {\n            setCurrentPage(currentPage + 1);\n          }}\n        >\n          {currentPage + 1}\n        </button>\n      }\n\n      {(currentPage < pagesAmount - 2) && \"...\"}\n\n      {currentPage < pagesAmount &&\n        <button\n          type=\"button\"\n          className=\"Pagination__page-button\"\n          onClick={() => {\n            setCurrentPage(pagesAmount);\n          }}\n        >\n          {pagesAmount}\n        </button>\n      }\n    </div>\n  )\n} ","import React from 'react';\nimport classNames from 'classnames';\nimport './ListNav.scss';\n\nexport const ListNav = ({ currentPage, pagesAmount, setCurrentPage }) => {\n  \n  return (\n    <div className=\"ListNav\">\n      <button\n        type=\"button\"\n        className={classNames(\"ListNav__nav-toggler\", {\n          \"ListNav__nav-toggler--disabled\": (currentPage < 2),\n        })}\n        onClick={(event) => {\n          event.preventDefault();\n          setCurrentPage(currentPage => currentPage - 1);\n        }}\n      >\n        back\n      </button>\n\n      <button\n        type=\"button\"\n        className={classNames(\"ListNav__nav-toggler\", {\n          \"ListNav__nav-toggler--disabled\": (pagesAmount <= currentPage),\n        })}\n        onClick={(event) => {\n          event.preventDefault();\n          setCurrentPage(currentPage => currentPage + 1);\n        }}\n      >\n        forward\n      </button>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport './Characters.scss';\n\nimport { getData } from '../../api/api';\nimport { CharactersFilter } from './CharactersFilter/CharactersFilter';\nimport { Character } from '../Character/Character';\nimport { ModalCharacter } from '../ModalCharacter/ModalCharacter';\nimport { Pagination } from '../Pagination/Pagination';\nimport { ListNav } from '../ListNav/ListNav';\n\nexport const Characters = () => {\n  const [ charactersFromServer, setCharacters ] = useState([]);\n\n  const [ cardsAmount, setCardsAmount ] = useState(0);\n  const [ pagesAmount, setPagesAmount ] = useState(0);\n  const [ currentPage, setCurrentPage] = useState(1);\n\n  const [ currentModal, setModal ] = useState(null);\n  const [ filterParams, setFilter ] = useState({\n    status: '',\n    species: '',\n    gender: '',\n  });\n\n  const {status, species, gender} = filterParams;\n\n  useEffect(async () => {\n    const newCharacters = await getData(\n      `character/?page=${currentPage}&status=${status}&gender=${gender}&species=${species}`\n    );\n\n    if (newCharacters.error) {\n      setCharacters(newCharacters.results);\n      setCardsAmount(0);\n      setPagesAmount(0);\n\n      console.log(newCharacters.error);\n      return;\n    }\n\n    setCardsAmount(newCharacters.info.count);\n    setPagesAmount(newCharacters.info.pages);\n    setCharacters(newCharacters.results);\n  }, [currentPage, filterParams]);\n\n  const showMore = ({...characterInfo}) => {\n    setModal(characterInfo);\n  };\n\n  const modalReset = () => {\n    setModal(null);\n  }\n\n  const handleFilter = (filter) => {\n    setFilter({...filter});\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"Characters\">\n      <h1 className=\"Characters__title\">Characters</h1>\n      <div className=\"Characters__info\">\n        <p>Found characters: {cardsAmount || \"0\"}</p>\n        <p>Pages: {pagesAmount || \"0\"}</p>\n      </div>\n\n      <CharactersFilter\n        handleFilter={handleFilter}\n      />\n\n      <Pagination\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n        pagesAmount={pagesAmount}\n      />\n\n      <ListNav\n        currentPage={currentPage}\n        pagesAmount={pagesAmount}\n        setCurrentPage={setCurrentPage}\n      />\n\n      {charactersFromServer &&\n        <div className=\"Characters__list\">\n            {\n              charactersFromServer.map(character => (\n                <Character\n                  showMore={showMore}\n                  key={character.id}\n                  {...character}\n                />\n              ))\n            }\n        </div>\n      }\n\n      {currentModal &&\n        <ModalCharacter {...currentModal} modalReset={modalReset} />\n      }\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport './EpisodesFilter.scss';\n\nexport const EpisodesFilter = ({ handleSearch, setCurrentPage }) => {\n  const [ query, setQuery ] = useState('');\n\n  return(\n    <input\n      className=\"EpisodesFilter\"\n      type=\"text\"\n      value={query}\n      autoComplete=\"off\"\n      placeholder=\"Episode title\"\n      onChange={event => {\n        setCurrentPage(1);\n        setQuery(event.target.value);\n        handleSearch(event.target.value);\n      }}\n    />\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport './Episodes.scss';\n\nimport { getData } from '../../api/api';\nimport { EpisodesFilter } from './EpisodesFilter/EpisodesFilter';\nimport { Pagination } from '../Pagination/Pagination';\nimport { ListNav } from '../ListNav/ListNav';\n\nexport const Episodes = () => {\n  const [ episodesFromServer, setEpisodes ] = useState([]);\n  const [ episodesAmount, setEpisodesAmount ] = useState(0);\n  const [ pagesAmount, setPagesAmount ] = useState(0);\n  const [ currentPage, setCurrentPage ] = useState(1);\n  const [ query, setQuery ] = useState('');\n\n  useEffect( async() => {\n    const newEpisodes = await getData(\n      `episode?page=${currentPage}&name=${query}`\n    );\n\n    if (newEpisodes.error) {\n      return;\n    }\n\n    setEpisodesAmount(newEpisodes.info.count);\n    setPagesAmount(newEpisodes.info.pages);\n    setEpisodes(newEpisodes.results);\n  }, [currentPage, query]);\n\n  const handleSearch = (titleRequest) => {\n    setQuery(titleRequest);\n  }\n\n  return (\n    <div className=\"Episodes\">\n      <h1 className=\"Episodes__title\">Episodes</h1>\n      <div className=\"Episodes__info\">\n        <p>Found series: {episodesAmount || \"0\"}</p>\n        <p>Pages: {pagesAmount || \"0\"}</p>\n      </div>\n\n      <EpisodesFilter\n        handleSearch={handleSearch}\n        setCurrentPage={setCurrentPage}\n      />\n\n      <Pagination\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n        pagesAmount={pagesAmount}\n      />\n\n      <ListNav\n        currentPage={currentPage}\n        pagesAmount={pagesAmount}\n        setCurrentPage={setCurrentPage}\n      />\n\n      <table className=\"Episodes__table\">\n        <thead>\n          <tr>\n            <td>№</td>\n            <td>Episodes</td>\n            <td>Title</td>\n            <td>Air date</td>\n          </tr>\n        </thead>\n\n        <tbody>\n          {episodesFromServer.map(episode => (\n            <tr key={episode.id}>\n              <td>{episode.id}.</td>\n              <td>{episode.episode}</td>\n              <td>{episode.name}</td>\n              <td>{episode.air_date}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport './LocationsFilter.scss';\n\nexport const LocationsFilter = ({ handleFilter }) => {\n  const [ filter, setFilter ] = useState({ \n    name: '',\n    type: '',\n    dimension: '',\n   })\n\n  return (\n    <form className=\"LocationsFilter\">\n      <input\n        className=\"LocationsFilter__field\"\n        type=\"text\"\n        value={filter.name}\n        name=\"name\"\n        placeholder=\"Location\"\n        autoComplete=\"off\"\n        onChange={(event) => {\n          setFilter({ ...filter, name: event.target.value });\n          handleFilter({ ...filter, name: event.target.value });\n        }}\n      />\n\n      <select\n        className=\"LocationsFilter__field\"\n        value={filter.type}\n        name=\"gender\"\n        onChange={(event) => {\n          setFilter({ ...filter, type: event.target.value });\n          handleFilter({ ...filter, type: event.target.value });\n        }}\n      >\n        <option value=\"\">All</option>\n        <option value=\"Planet\">Planet</option>\n        <option value=\"Cluster\">Cluster</option>\n        <option value=\"Space station\">Space station</option>\n        <option value=\"Microverse\">Microverse</option>\n        <option value=\"Resort\">Resort</option>\n        <option value=\"Fantasy town\">Fantasy town</option>\n        <option value=\"Space station\">Space station</option>\n        <option value=\"TV\">TV</option>\n        <option value=\"Dream\">Dream</option>\n      </select>\n\n      <select\n        className=\"LocationsFilter__field\"\n        value={filter.dimension}\n        name=\"species\"\n        onChange={(event) => {\n          setFilter({ ...filter, dimension: event.target.value });\n          handleFilter({ ...filter, dimension: event.target.value });\n        }}\n      >\n        <option value=\"\">All</option>\n        <option value=\"Dimension C-137\">Dimension C-137</option>\n        <option value=\"unknown\">unknown</option>\n        <option value=\"Replacement Dimension\">Replacement Dimension</option>\n        <option value=\"Cronenberg Dimension\">Cronenberg Dimension</option>\n        <option value=\"Fantasy Dimension\">Fantasy Dimension</option>\n        <option value=\"Dimension 5-126\">Dimension 5-126</option>\n        <option value=\"Post-Apocalyptic Dimension\">Post-Apocalyptic Dimension</option>\n      </select>\n    </form>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport './Locations.scss';\n\nimport { getData } from '../../api/api';\nimport { LocationsFilter } from './LocationsFilter/LocationsFilter';\nimport { Pagination } from '../Pagination/Pagination';\nimport { ListNav } from '../ListNav/ListNav';\n\nexport const Locations = () => {\n  const [ locationsFromServer, setLocations ] = useState([]);\n  const [ locationsAmount, setLocationsAmount ] = useState(0);\n  const [ pagesAmount, setPagesAmount ] = useState(0);\n  const [ currentPage, setCurrentPage ] = useState(1);\n  const [ filter, setFilter ] = useState({\n    name: '',\n    type: '',\n    dimension: '',\n  });\n\n  const { name, type, dimension } = filter;\n\n  useEffect( async() => {\n    const newLocations = await getData(\n      `location?page=${currentPage}&name=${name}&type=${type}&dimension=${dimension}`\n    );\n\n    if (newLocations.error) {\n      setLocationsAmount(0);\n      setPagesAmount(0);\n\n      console.log(newLocations.error);\n      return;\n    }\n\n    setLocationsAmount(newLocations.info.count);\n    setPagesAmount(newLocations.info.pages);\n    setLocations(newLocations.results);\n  }, [currentPage, filter]);\n\n  const handleFilter = (filter) => {\n    setFilter({...filter});\n    setCurrentPage(1);\n  };\n\n  return (\n\n      <div>\n        <h1 className=\"Locations__title\">Locations</h1>\n\n        <div className=\"Locations__info\">\n          <p>Found characters: {locationsAmount || \"0\"}</p>\n          <p>Pages: {pagesAmount || \"0\"}</p>\n        </div>\n\n        <LocationsFilter\n          handleFilter={handleFilter}\n        />\n\n        <Pagination\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n          pagesAmount={pagesAmount}\n        />\n\n        <ListNav\n          currentPage={currentPage}\n          pagesAmount={pagesAmount}\n          setCurrentPage={setCurrentPage}\n        />\n\n        {locationsAmount > 0 &&\n          <table className=\"Locations__table\">\n            <thead>\n              <tr>\n                <td>№</td>\n                <td>Name</td>\n                <td>Type</td>\n                <td>Dimension</td>\n              </tr>\n            </thead>\n\n            <tbody>\n              {locationsFromServer.map(location => (\n                <tr key={location.id}>\n                  <td>{location.id}.</td>\n                  <td>{location.name}</td>\n                  <td>{location.type}</td>\n                  <td>{location.dimension}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        }\n      </div>\n  );\n}\n","import React from 'react';\nimport './WatchItem.scss';\n\nexport const WatchItem = ({ movie, index, toggleMovie, removeMovie }) => {\n\n  return (\n    <tr key={movie.id}>\n      <td>{index + 1}.</td>\n      <td>\n        <input\n          type=\"checkbox\"\n          checked={movie.completed}\n          onChange={() => toggleMovie(movie.id)}\n        />\n      </td>\n      <td>{movie.title}</td>\n      <td>\n        <button\n          className=\"WatchItem__button\"\n          onClick={() => removeMovie(movie.id)}\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport './WatchList.scss';\n\nimport { WatchItem } from './WatchItem/WatchItem';\n\nexport const WatchList = () => {\n  const [ movies, setMovies ] = useState([]);\n  const [ newMovieTitle, setMovieTitle ] = useState('');\n\n  useEffect(() => {\n    const movies = localStorage.getItem('movies') || '[]';\n    setMovies(JSON.parse(movies));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('movies', JSON.stringify(movies));\n  }, [movies]);\n\n  const addMovie = (event) => {\n    event.preventDefault();\n\n    if (!newMovieTitle.trim()) return;\n\n    setMovies([\n      ...movies,\n      {\n        id: Date.now(),\n        title: newMovieTitle.trim(),\n        completed: false,\n      }\n    ]);\n\n    setMovieTitle('');\n  }\n\n  const toggleMovie = (id) => {\n    setMovies(movies.map(movie => {\n      if (movie.id === id) {\n        movie.completed = !movie.completed;\n      }\n\n      return movie;\n    }));\n  }\n\n  const removeMovie = (id) => {\n    setMovies(movies.filter(movie => {\n      return movie.id !== id;\n    }));\n  }\n\n  return (\n    <div className=\"WatchList\">\n      <h1 className=\"WatchList__title\">My watch list</h1>\n\n      <form\n        className=\"WatchList__form\"\n        action=\"\"\n        onSubmit={addMovie}\n      >\n        <input\n          className=\"WatchList__input\"\n          placeholder=\"Episide\"\n          autoComplete=\"off\"\n          type=\"text\"\n          value={newMovieTitle}\n          onChange={(event) => setMovieTitle(event.target.value)}\n        />\n        <button\n          type=\"submit\"\n          className=\"WatchList__button\"\n        >\n          Add\n        </button>\n      </form>\n\n      <table className=\"WatchList__table\">\n        <thead>\n          <tr className=\"WatchList__first-row\">\n            <td>№</td>\n            <td>Watched</td>\n            <td>Title</td>\n            <td>Delete</td>\n          </tr>\n        </thead>\n\n        <tbody>\n          {\n            movies.map((movie, index) => (\n              <WatchItem\n                index={index}\n                key={movie.id}\n                movie={movie}\n                title={newMovieTitle}\n                toggleMovie={toggleMovie}\n                removeMovie={removeMovie}\n              />\n            ))\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from 'react';\nimport './Main.scss';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { Characters } from '../Characters/Characters';\nimport { Episodes } from '../Episodes/Episodes';\nimport { Locations } from '../Locations/Locations';\nimport { WatchList } from '../WatchList/WatchList';\n\nexport const Main = () => {\n\n  return (\n    <main className=\"Main\">\n      <Switch>\n        <Route exact path=\"/episodes\">\n          <Episodes />\n        </Route>\n\n        <Route exact path=\"/locations\">\n          <Locations />\n        </Route>\n\n        <Route exact path=\"/my_list\">\n          <WatchList />\n        </Route>\n\n        <Route path=\"/\">\n          <Characters />\n        </Route>\n      </Switch>\n    </main>\n  )\n}","import React from 'react';\nimport './App.scss';\n\nimport {\n  // BrowserRouter as Router,\n  // Switch,\n  Route,\n  Link\n} from 'react-router-dom';\n\nimport { Header } from './components/Header/Header';\nimport { Main } from './components/Main/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}